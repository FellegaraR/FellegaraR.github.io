@PhdThesis{Fellegara2015,
    Author = "Fellegara, R.",
    Title = "A spatio-topological approach to the representation of simplicial complexes and beyond",
    School = "Department of Computer Science (DIBRIS), University of Genova, Italy",
    Year = "2015",
    Note = "P.h.D. Thesis, Internal Report DIBRIS-TH-2015-01",
    abstract = "The efficient representation and management of simplicial and cell complexes  is an active research topic in several fields, including geometric modeling, computer graphics, scientific visualization, and geographic data processing. Managing complexes in three dimensions and higher is not a simple task since the data structures proposed for three dimensions are quite large and become even larger when considering  complexes in four dimensions and higher. Furthermore, current implementations cannot always keep large complexes entirely in main memory (in-core) and some out-of-core approaches, for example using a spatial data base, are intrinsically slow. There are two fundamental categories of queries proposed in the literature for interacting with simplicial and cell complexes: those based on spatial  locality and those based on topological connectivity.  Spatial information can be retrieved through spatial queries, such as point location queries, box queries (i.e.,  finding the cells of the complex inside a rectangle or a parallelepiped) and ray intersection queries (i.e, finding the intersection of a ray with the cells of the complex). 	Spatial queries are required to understand the relation between the cells of the complex and arbitrary regions in space, and are thus based on geometric information. Topological connectivity information can be retrieved through topological queries. Examples of topological queries are, for instance in a triangle mesh, finding the triangles adjacent to a given triangle through an edge or a vertex; or finding all triangles incident to a given vertex or edge. Thus, topological queries are necessary to perform navigation over the complex (e.g., iso-surface extraction or path computation). Several topological data structures have been proposed in the literature, however, such data structures do not efficiently support spatial queries. We propose here a spatio-topological approach to modeling simplicial complexes and certain class of cell complexes, and we call  the resulting data structure a Stellar tree.  In a Stellar tree the embedding space of the complex is decomposed using a hierarchical spatial index, such as a quadtree, octree or kD-tree, and the topological queries are efficiently answered by reconstructing the local  topology. The Stellar tree is a flexible model that can efficiently represent complexes with cells of different types and dimensions, with irregular and non-manifold connectivity and using different spatial subdivision approaches. An advantage of this formulation is that we can locally reconstruct the optimal application-dependent topological data structure to solve the task at hand using a fraction of the memory required by the corresponding global topological data structure. Stellar trees are well suited for applications where we efficiently extract local topological relations, locally traverse and update the complex, and they do not require maintaining the topological connectivity of the full complex. We demonstrate the compactness of the Stellar tree and its efficiency in a variety of  local and global processing applications, such as the computation of discrete curvature, validation and simplification of the complex, computation and simplification of the discrete Morse gradient, morphological segmentation of scalar fields through discrete Morse complexes. We also propose a family of spatial indexes for a specific instance of a simplicial complex, a tetrahedral mesh, that we call Tetrahedral trees. We address the problem of performing spatial and local topological queries on such meshes. Tetrahedral trees are based on a subdivision of a cubic domain containing the mesh through a regular nested subdivision (an octree or a kD-tree). We  develop four variants of the spatial index depending on four different subdivision criteria. Moreover, we spatially reorganize the index to have a spatial coherence of the indexed data and we define a new compact encoding for the block nodes which drastically reduce the storage requirements of the data structure.
"
}
